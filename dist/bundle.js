/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/***/ (function() {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar _this = this;\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nbuttonElement = document.getElementById('searchBtn');\noccupationField = document.getElementById('occupationField');\noccupationField.addEventListener('change', function (event) {\n  showHideEle(_this, 'occupationGroup', '');\n});\nbuttonElement.addEventListener(\"click\", getStatistics(document.getElementById('search')), false);\nvar labels = [];\nvar data = {\n  labels: labels,\n  datasets: []\n};\nvar config = {\n  type: 'line',\n  data: data,\n  options: {}\n};\nvar arrColors = ['#65DEF1', '#A8DCD1', '#DCE2C8', '#F96900', '#B5EF8A', '#2274A5', '#F75C03', '#F1C40F', '#D90368', '#B2DFDB', '#59C3C3', '#52489C', '#EBEBEB', '#009688', '#00897B', '#00796B', '#00695C', '#004D40', '#A7FFEB', '#64FFDA', '#1DE9B6', '#00BFA5', '#E8F5E9', '#C8E6C9', '#A5D6A7', '#81C784', '#66BB6A', '#4CAF50', '#43A047', '#388E3C', '#2E7D32', '#1B5E20', '#B9F6CA', '#69F0AE'];\n\nvar Search = /*#__PURE__*/function () {\n  function Search() {\n    _classCallCheck(this, Search);\n  }\n\n  _createClass(Search, [{\n    key: \"update\",\n    value: function update() {\n      this.from = document.getElementById('from').value;\n      this.to = document.getElementById('to').value;\n      this.municipality_concept_id = document.getElementById('locality-dropdown').value;\n      this.occupation_field_concept_id = document.getElementById('occupationField').value;\n      this.occupation_group_concept_id = document.getElementById('occupationGroup').value;\n    }\n  }, {\n    key: \"searchSummaryStr\",\n    value: function searchSummaryStr() {\n      this.update();\n      var searchStr = '/summary/?';\n\n      for (var _i = 0, _Object$entries = Object.entries(this); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            key = _Object$entries$_i[0],\n            value = _Object$entries$_i[1];\n\n        if (!!value) {\n          searchStr += \"&\".concat(key, \"=\").concat(value);\n        }\n      }\n\n      return searchStr;\n    }\n  }]);\n\n  return Search;\n}();\n\nfunction getArrayOfDates(_x, _x2, _x3) {\n  return _getArrayOfDates.apply(this, arguments);\n}\n\nfunction _getArrayOfDates() {\n  _getArrayOfDates = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(skill, chart, querylistStr) {\n    var fromDate, toDate, index, indexDate, _index2, _indexDate;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fromDate = new Date(document.getElementById('from').value);\n            toDate = new Date(document.getElementById('to').value);\n\n            for (index = 1, indexDate = new Date(fromDate); indexDate.getTime() <= toDate.getTime();) {\n              indexDate.setMonth(indexDate.getMonth() + index);\n\n              if (!labels.includes(indexDate.toLocaleString('default', {\n                month: 'long',\n                year: 'numeric'\n              }))) {\n                labels.push(indexDate.toLocaleString('default', {\n                  month: 'long',\n                  year: 'numeric'\n                }));\n              }\n            }\n\n            _index2 = 1, _indexDate = new Date(fromDate);\n\n          case 4:\n            if (!(_indexDate.getTime() <= toDate.getTime())) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 7;\n            return fetch(\"http://localhost:3001/list/\".concat(querylistStr, \"&skill=\").concat(encodeURIComponent(skill), \"&from=\").concat(_indexDate.getFullYear(), \"-\").concat(_indexDate.getMonth() + 1, \"-01&to=\").concat(_indexDate.getFullYear(), \"-\").concat(_indexDate.getMonth() + 1, \"-27\")).then(function (response) {\n              return response.json();\n            }).then(function (responseData) {\n              for (var i = 0, iLen = data.datasets.length; i < iLen; i++) {\n                if (data.datasets[i].label == responseData[0].skill) {\n                  data.datasets[i].data.push(responseData[0].total_vacancies);\n                }\n\n                ;\n                chart.update();\n              }\n            });\n\n          case 7:\n            result = _context.sent;\n\n            _indexDate.setMonth(_indexDate.getMonth() + _index2);\n\n          case 9:\n            _context.next = 4;\n            break;\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getArrayOfDates.apply(this, arguments);\n}\n\nfunction taxSearch(_x4, _x5) {\n  return _taxSearch.apply(this, arguments);\n}\n\nfunction _taxSearch() {\n  _taxSearch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(searchStr, type) {\n    var response, json;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"https://taxonomy.api.jobtechdev.se/v1/taxonomy/main/concepts?preferred-label=\".concat(searchStr, \"&type=\").concat(type), {});\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return response.json();\n\n          case 5:\n            json = _context2.sent;\n            return _context2.abrupt(\"return\", json);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _taxSearch.apply(this, arguments);\n}\n\nfunction getStatistics(_x6) {\n  return _getStatistics.apply(this, arguments);\n}\n\nfunction _getStatistics() {\n  _getStatistics = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(queryElement) {\n    var myChart, chart, queryStr, municipalityID, querylistStr;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (Chart.getChart('myChart')) {\n              Chart.getChart('myChart').destroy();\n            }\n\n            myChart = new Chart(document.getElementById('myChart'), config);\n            chart = Chart.getChart(\"myChart\");\n            queryStr = '?';\n            _context3.next = 6;\n            return taxSearch(document.getElementById('locality-dropdown').value, 'municipality');\n\n          case 6:\n            municipalityID = _context3.sent;\n            queryStr += !!document.getElementById('regionInput').value ? '' : '';\n            queryStr += !!document.getElementById('locality-dropdown').value ? \"municipality_concept_id=\".concat(municipalityID[0]['taxonomy/id'], \"&\") : '';\n            queryStr += !!document.getElementById('occupationField').value ? \"occupation_field_concept_id=\".concat(document.getElementById('occupationField').value, \"&\") : '';\n            queryStr += !!document.getElementById('occupationGroup').value ? \"occupation_group_concept_id=\".concat(document.getElementById('occupationGroup').value, \"&\") : '';\n            querylistStr = queryStr;\n            queryStr += !!document.getElementById('from').value ? \"from=\".concat(document.getElementById('from').value, \"&\") : '';\n            queryStr += !!document.getElementById('to').value ? \"to=\".concat(document.getElementById('to').value, \"&\") : '';\n            _context3.next = 16;\n            return fetch(\"http://localhost:3001/summary/\".concat(queryStr)).then(function (response) {\n              return response.json();\n            }).then(function (responseData) {\n              var el = document.getElementById('skillElement');\n              el.innerHTML = '';\n              data.datasets = [];\n              var respnseDataIndex = 0;\n              responseData.forEach(function (element) {\n                getArrayOfDates(element.skill, chart, querylistStr);\n                data.datasets.push({\n                  label: element.skill,\n                  backgroundColor: arrColors[respnseDataIndex],\n                  borderColor: arrColors[respnseDataIndex],\n                  data: []\n                });\n                respnseDataIndex++;\n                el.innerHTML += \"<div class=\\\"col-6\\\">\".concat(element.skill, \"</div><div class=\\\"col-6\\\">\").concat(element.total_vacancies, \"</div>\");\n              });\n            });\n\n          case 16:\n            result = _context3.sent;\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getStatistics.apply(this, arguments);\n}\n\nvar occupationFieldsAndGroups = {};\n\nfunction showHideEle(selectSrc, targetEleId, triggerValue) {\n  var labelElementName = document.getElementById(targetEleId).getAttribute(\"name\");\n  var labelElements = document.getElementsByTagName(\"label\");\n\n  if (selectSrc.value != triggerValue) {\n    document.getElementById(targetEleId).style.display = \"inline-block\";\n    getOccupationGroupInField(selectSrc, targetEleId);\n\n    for (var index = 0; index < labelElements.length; index++) {\n      if (labelElements[index].htmlFor === labelElementName) {\n        labelElements[index].style.display = \"inline-block\";\n      }\n    }\n  } else {\n    for (var _index = 0; _index < labelElements.length; _index++) {\n      if (labelElements[_index].htmlFor === labelElementName) {\n        labelElements[_index].style.display = \"none\";\n      }\n    }\n\n    document.getElementById(targetEleId).style.display = \"none\";\n  }\n}\n\nfetch('assets/json.json', {\n  method: 'GET'\n}).then(function (response) {\n  if (response.status !== 200) {\n    console.warn('Looks like there was a problem. Status Code: ' + response.status);\n    return;\n  }\n\n  response.json().then(function (data) {\n    var occupationFieldElement = document.getElementById('occupationField');\n    occupationFieldsAndGroups = data.data.concepts;\n    data.data.concepts.map(function (item) {\n      return occupationFieldElement.innerHTML += \"<option value=\".concat(item.id, \">\").concat(item.preferred_label, \"</option>\");\n    });\n  });\n});\n\nfunction getOccupationGroupInField(OccuptionField, targetEleId) {\n  var targetEl = document.getElementById(targetEleId);\n  var list = occupationFieldsAndGroups.find(function (obj) {\n    return obj.id === OccuptionField.value;\n  });\n  targetEl.innerHTML = '<option value=\"\">Alla</option>';\n  list.narrower.map(function (item) {\n    return targetEl.innerHTML += \"<option value=\".concat(item.id, \">\").concat(item.preferred_label, \"</option>\");\n  });\n}\n\nfunction autoComplete(element, type) {\n  arrayautolabels = [];\n  arrautolabels = [];\n  fetch(\"https://taxonomy.api.jobtechdev.se/v1/taxonomy/suggesters/autocomplete?query-string=\".concat(element.value, \"&type=\").concat(type), {\n    method: 'GET'\n  }).then(function (response) {\n    if (response.status !== 200) {\n      console.warn('Looks like there was a problem. Status Code: ' + response.status);\n      return;\n    } // Examine the text in the response  \n\n\n    response.json().then(function (data) {\n      var option;\n      listElement = element.list;\n      listElement.innerHTML = \"\";\n\n      for (var i = 0; i < data.length; i++) {\n        listElement.innerHTML += \"<option value=\\\"\".concat(data[i]['taxonomy/preferred-label'], \"\\\">\");\n      }\n    });\n  })[\"catch\"](function (err) {\n    console.error('Fetch Error -', err);\n  });\n}\n\n//# sourceURL=webpack://historical-skills-frontend/./src/js/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/main.js"]();
/******/ 	
/******/ })()
;